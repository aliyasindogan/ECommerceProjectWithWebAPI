// <auto-generated />
using System;
using DataAccess.Concrete.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    [Migration("20230826203749_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Concrete.AppOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("AppOperationClaims", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "AppUser"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "AppUserType"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Page"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "PageType"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Product"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "ProductType"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Contact"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("GsmNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("GsmNumber");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastName");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordSalt");

                    b.Property<string>("ProfileImageUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ProfileImageUrl");

                    b.Property<Guid>("RefreshToken")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserName");

                    b.Property<int>("UserTypeID")
                        .HasColumnType("int")
                        .HasColumnName("UserTypeID");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeID");

                    b.ToTable("AppUsers", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 151, DateTimeKind.Local).AddTicks(6974),
                            CreatedUserId = 1,
                            Email = "sadmin@gmail.com",
                            FirstName = "System",
                            GsmNumber = "",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Admin",
                            PasswordHash = new byte[] { 49, 213, 67, 149, 135, 53, 111, 162, 15, 211, 230, 109, 92, 248, 25, 133, 98, 152, 167, 109, 216, 112, 57, 198, 106, 79, 198, 90, 249, 186, 84, 196, 149, 242, 52, 232, 158, 124, 56, 150, 159, 80, 46, 160, 77, 192, 148, 233, 233, 201, 127, 51, 82, 223, 194, 182, 1, 233, 118, 105, 87, 151, 38, 91 },
                            PasswordSalt = new byte[] { 104, 230, 197, 179, 144, 172, 237, 204, 213, 229, 16, 190, 181, 111, 38, 59, 98, 112, 225, 127, 10, 84, 191, 116, 164, 88, 222, 41, 20, 183, 95, 187, 182, 213, 132, 169, 239, 79, 255, 167, 219, 241, 238, 79, 174, 31, 219, 107, 21, 45, 20, 71, 193, 152, 255, 224, 110, 78, 225, 34, 162, 185, 79, 252, 137, 0, 21, 139, 138, 243, 57, 71, 165, 170, 90, 242, 180, 240, 129, 239, 93, 42, 85, 218, 53, 164, 200, 207, 97, 79, 220, 229, 239, 127, 144, 98, 155, 25, 132, 40, 53, 71, 77, 56, 97, 116, 163, 80, 218, 66, 81, 85, 184, 48, 206, 7, 221, 141, 219, 139, 128, 181, 188, 160, 59, 13, 188, 2 },
                            ProfileImageUrl = "",
                            RefreshToken = new Guid("0a1f51fa-d96a-4602-baa4-d295b1c9f9b0"),
                            UserName = "sadmin",
                            UserTypeID = 1
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("UserTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUserTypes", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 157, DateTimeKind.Local).AddTicks(3739),
                            CreatedUserId = -1,
                            IsActive = true,
                            IsDeleted = false,
                            UserTypeName = "System Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 157, DateTimeKind.Local).AddTicks(3993),
                            CreatedUserId = -1,
                            IsActive = true,
                            IsDeleted = false,
                            UserTypeName = "Admin"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUserTypeAppOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppOperationClaimId")
                        .HasColumnType("int");

                    b.Property<int?>("AppUserTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OperationClaimID")
                        .HasColumnType("int")
                        .HasColumnName("OperationClaimId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("char(4)")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserTypeID")
                        .HasColumnType("int")
                        .HasColumnName("UserTypeID");

                    b.HasKey("Id");

                    b.HasIndex("AppOperationClaimId");

                    b.HasIndex("AppUserTypeId");

                    b.ToTable("AppUserTypeAppOperationClaims", "dbo");
                });

            modelBuilder.Entity("Entities.Concrete.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("DisplayOrder");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("LanguageCode");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LanguageName");

                    b.HasKey("Id");

                    b.ToTable("Languages", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            IsActive = true,
                            LanguageCode = "tr-TR",
                            LanguageName = "Türkçe"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            IsActive = true,
                            LanguageCode = "en-EN",
                            LanguageName = "English"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("DisplayOrder");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PageTypeID")
                        .HasColumnType("int")
                        .HasColumnName("PageTypeID");

                    b.Property<string>("PageURL")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("PageURL");

                    b.Property<int?>("ParentPageID")
                        .HasColumnType("int")
                        .HasColumnName("ParentPageID");

                    b.HasKey("Id");

                    b.HasIndex("PageTypeID");

                    b.ToTable("Pages", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 3,
                            IsActive = true,
                            PageTypeID = 1,
                            PageURL = "#"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 1,
                            IsActive = true,
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUser/List",
                            ParentPageID = 1
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUser/Add",
                            ParentPageID = 2
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUser/Update",
                            ParentPageID = 2
                        },
                        new
                        {
                            Id = 5,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUser/Delete",
                            ParentPageID = 2
                        },
                        new
                        {
                            Id = 6,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUser/Detail",
                            ParentPageID = 2
                        },
                        new
                        {
                            Id = 7,
                            DisplayOrder = 1,
                            IsActive = true,
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUserType/List",
                            ParentPageID = 1
                        },
                        new
                        {
                            Id = 8,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUserType/Add",
                            ParentPageID = 7
                        },
                        new
                        {
                            Id = 9,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUserType/Update",
                            ParentPageID = 7
                        },
                        new
                        {
                            Id = 10,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUserType/Delete",
                            ParentPageID = 7
                        },
                        new
                        {
                            Id = 11,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUserType/Detail",
                            ParentPageID = 7
                        },
                        new
                        {
                            Id = 12,
                            DisplayOrder = 1,
                            IsActive = true,
                            PageTypeID = 1,
                            PageURL = "/Admin/Page/List",
                            ParentPageID = 1
                        },
                        new
                        {
                            Id = 13,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/Page/Add",
                            ParentPageID = 12
                        },
                        new
                        {
                            Id = 14,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/Page/Update",
                            ParentPageID = 12
                        },
                        new
                        {
                            Id = 15,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/Page/Delete",
                            ParentPageID = 12
                        },
                        new
                        {
                            Id = 16,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/Page/Detail",
                            ParentPageID = 12
                        },
                        new
                        {
                            Id = 17,
                            DisplayOrder = 1,
                            IsActive = true,
                            PageTypeID = 1,
                            PageURL = "/Admin/PagePermisson/List",
                            ParentPageID = 1
                        },
                        new
                        {
                            Id = 18,
                            DisplayOrder = 1,
                            IsActive = true,
                            PageTypeID = 1,
                            PageURL = "#"
                        },
                        new
                        {
                            Id = 19,
                            DisplayOrder = 1,
                            IsActive = true,
                            PageTypeID = 1,
                            PageURL = "/Admin/Product/List",
                            ParentPageID = 18
                        },
                        new
                        {
                            Id = 20,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/Product/Add",
                            ParentPageID = 19
                        },
                        new
                        {
                            Id = 21,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/Product/Update",
                            ParentPageID = 19
                        },
                        new
                        {
                            Id = 22,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/Product/Delete",
                            ParentPageID = 19
                        },
                        new
                        {
                            Id = 23,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/Product/Detail",
                            ParentPageID = 19
                        },
                        new
                        {
                            Id = 24,
                            DisplayOrder = 1,
                            IsActive = true,
                            PageTypeID = 1,
                            PageURL = "/Admin/ProductType/List",
                            ParentPageID = 18
                        },
                        new
                        {
                            Id = 25,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/ProductType/Add",
                            ParentPageID = 24
                        },
                        new
                        {
                            Id = 26,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/ProductType/Update",
                            ParentPageID = 24
                        },
                        new
                        {
                            Id = 27,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/ProductType/Delete",
                            ParentPageID = 24
                        },
                        new
                        {
                            Id = 28,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/ProductType/Detail",
                            ParentPageID = 24
                        },
                        new
                        {
                            Id = 29,
                            DisplayOrder = 2,
                            IsActive = true,
                            PageTypeID = 1,
                            PageURL = "#"
                        },
                        new
                        {
                            Id = 31,
                            DisplayOrder = 1,
                            IsActive = true,
                            PageTypeID = 1,
                            PageURL = "/Admin/Contact/List",
                            ParentPageID = 29
                        },
                        new
                        {
                            Id = 32,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/Contact/Add",
                            ParentPageID = 30
                        },
                        new
                        {
                            Id = 33,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/Contact/Update",
                            ParentPageID = 30
                        },
                        new
                        {
                            Id = 34,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/Contact/Delete",
                            ParentPageID = 30
                        },
                        new
                        {
                            Id = 35,
                            DisplayOrder = 1,
                            IsActive = false,
                            PageTypeID = 1,
                            PageURL = "/Admin/Contact/Detail",
                            ParentPageID = 30
                        });
                });

            modelBuilder.Entity("Entities.Concrete.PageLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageID")
                        .HasColumnType("int")
                        .HasColumnName("LanguageID");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)")
                        .HasColumnName("MetaDescription");

                    b.Property<string>("MetaKeywords")
                        .HasMaxLength(260)
                        .HasColumnType("nvarchar(260)")
                        .HasColumnName("MetaKeywords");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("MetaTitle");

                    b.Property<int>("PageID")
                        .HasColumnType("int")
                        .HasColumnName("PageID");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PageName");

                    b.Property<string>("PageSeoURL")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("PageSeoURL");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageID");

                    b.HasIndex("PageID");

                    b.ToTable("PageLanguages", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 169, DateTimeKind.Local).AddTicks(7111),
                            CreatedUserId = -1,
                            IsActive = true,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 1,
                            PageName = "Sistem Ayarları",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(899),
                            CreatedUserId = -1,
                            IsActive = true,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 2,
                            PageName = "Kullanıcılar",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(918),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 3,
                            PageName = "Kullanıcılar",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(923),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 4,
                            PageName = "Kullanıcılar",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(926),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 5,
                            PageName = "Kullanıcılar",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(930),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 6,
                            PageName = "Kullanıcılar",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(934),
                            CreatedUserId = -1,
                            IsActive = true,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 7,
                            PageName = "Kullanıcı Tipleri",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(938),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 8,
                            PageName = "Kullanıcı Tipleri",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(941),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 9,
                            PageName = "Kullanıcı Tipleri",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(944),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 10,
                            PageName = "Kullanıcı Tipleri",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(948),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 11,
                            PageName = "Kullanıcı Tipleri",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(951),
                            CreatedUserId = -1,
                            IsActive = true,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 12,
                            PageName = "Sayfalar",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(954),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 13,
                            PageName = "Sayfalar",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(958),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 14,
                            PageName = "Sayfalar",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(961),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 15,
                            PageName = "Sayfalar",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(966),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 16,
                            PageName = "Sayfalar",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(969),
                            CreatedUserId = -1,
                            IsActive = true,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 17,
                            PageName = "Sayfa Yetkileri",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(972),
                            CreatedUserId = -1,
                            IsActive = true,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 18,
                            PageName = "Ürün",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(978),
                            CreatedUserId = -1,
                            IsActive = true,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 19,
                            PageName = "Ürünler",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(982),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 20,
                            PageName = "Ürünler",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(985),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 21,
                            PageName = "Ürünler",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(989),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 22,
                            PageName = "Ürünler",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(992),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 23,
                            PageName = "Ürünler",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(995),
                            CreatedUserId = -1,
                            IsActive = true,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 24,
                            PageName = "Ürün Tipleri",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(999),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 25,
                            PageName = "Ürün Tipleri",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(1002),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 26,
                            PageName = "Ürün Tipleri",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(1005),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 27,
                            PageName = "Ürün Tipleri",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(1009),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 28,
                            PageName = "Ürün Tipleri",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(1012),
                            CreatedUserId = -1,
                            IsActive = true,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 29,
                            PageName = "Genel Sayfalar",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(1015),
                            CreatedUserId = -1,
                            IsActive = true,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 31,
                            PageName = "Hakkımızda",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(1019),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 32,
                            PageName = "Hakkımızda",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(1022),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 33,
                            PageName = "Hakkımızda",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(1025),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 34,
                            PageName = "Hakkımızda",
                            PageSeoURL = ""
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(2023, 8, 26, 23, 37, 48, 170, DateTimeKind.Local).AddTicks(1028),
                            CreatedUserId = -1,
                            IsActive = false,
                            IsDeleted = false,
                            LanguageID = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageID = 35,
                            PageName = "Hakkımızda",
                            PageSeoURL = ""
                        });
                });

            modelBuilder.Entity("Entities.Concrete.PagePermisson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppOperationClaimId")
                        .HasColumnType("int");

                    b.Property<int?>("AppUserTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OperationClaimID")
                        .HasColumnType("int")
                        .HasColumnName("OperationClaimID");

                    b.Property<int>("PageID")
                        .HasColumnType("int")
                        .HasColumnName("PageID");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserTypeID")
                        .HasColumnType("int")
                        .HasColumnName("UserTypeID");

                    b.HasKey("Id");

                    b.HasIndex("AppOperationClaimId");

                    b.HasIndex("AppUserTypeId");

                    b.HasIndex("PageID");

                    b.ToTable("PagePermissons", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            IsDeleted = false,
                            OperationClaimID = 1,
                            PageID = 2,
                            UserTypeID = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            IsDeleted = false,
                            OperationClaimID = 1,
                            PageID = 3,
                            UserTypeID = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            IsDeleted = false,
                            OperationClaimID = 1,
                            PageID = 4,
                            UserTypeID = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            IsDeleted = false,
                            OperationClaimID = 1,
                            PageID = 5,
                            UserTypeID = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            IsDeleted = false,
                            OperationClaimID = 1,
                            PageID = 6,
                            UserTypeID = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            IsDeleted = false,
                            OperationClaimID = 1,
                            PageID = 7,
                            UserTypeID = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            IsDeleted = false,
                            OperationClaimID = 1,
                            PageID = 8,
                            UserTypeID = 2
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            IsDeleted = false,
                            OperationClaimID = 1,
                            PageID = 9,
                            UserTypeID = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            IsDeleted = false,
                            OperationClaimID = 1,
                            PageID = 10,
                            UserTypeID = 2
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            IsDeleted = false,
                            OperationClaimID = 1,
                            PageID = 11,
                            UserTypeID = 2
                        });
                });

            modelBuilder.Entity("Entities.Concrete.PageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PageTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PageTypeName");

                    b.HasKey("Id");

                    b.ToTable("PageTypes", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            PageTypeName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            PageTypeName = "Web"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.HasOne("Entities.Concrete.AppUserType", "AppUserType")
                        .WithMany("AppUsers")
                        .HasForeignKey("UserTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUserType");
                });

            modelBuilder.Entity("Entities.Concrete.AppUserTypeAppOperationClaim", b =>
                {
                    b.HasOne("Entities.Concrete.AppOperationClaim", "AppOperationClaim")
                        .WithMany("AppUserTypeAppOperationClaims")
                        .HasForeignKey("AppOperationClaimId");

                    b.HasOne("Entities.Concrete.AppUserType", "AppUserType")
                        .WithMany()
                        .HasForeignKey("AppUserTypeId");

                    b.Navigation("AppOperationClaim");

                    b.Navigation("AppUserType");
                });

            modelBuilder.Entity("Entities.Concrete.Page", b =>
                {
                    b.HasOne("Entities.Concrete.PageType", "PageType")
                        .WithMany("Pages")
                        .HasForeignKey("PageTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PageType");
                });

            modelBuilder.Entity("Entities.Concrete.PageLanguage", b =>
                {
                    b.HasOne("Entities.Concrete.Language", "Language")
                        .WithMany("PageLanguages")
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Page", "Page")
                        .WithMany("PageLanguages")
                        .HasForeignKey("PageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Page");
                });

            modelBuilder.Entity("Entities.Concrete.PagePermisson", b =>
                {
                    b.HasOne("Entities.Concrete.AppOperationClaim", "AppOperationClaim")
                        .WithMany("PagePermissons")
                        .HasForeignKey("AppOperationClaimId");

                    b.HasOne("Entities.Concrete.AppUserType", "AppUserType")
                        .WithMany("PagePermissons")
                        .HasForeignKey("AppUserTypeId");

                    b.HasOne("Entities.Concrete.Page", "Page")
                        .WithMany("PagePermissons")
                        .HasForeignKey("PageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppOperationClaim");

                    b.Navigation("AppUserType");

                    b.Navigation("Page");
                });

            modelBuilder.Entity("Entities.Concrete.AppOperationClaim", b =>
                {
                    b.Navigation("AppUserTypeAppOperationClaims");

                    b.Navigation("PagePermissons");
                });

            modelBuilder.Entity("Entities.Concrete.AppUserType", b =>
                {
                    b.Navigation("AppUsers");

                    b.Navigation("PagePermissons");
                });

            modelBuilder.Entity("Entities.Concrete.Language", b =>
                {
                    b.Navigation("PageLanguages");
                });

            modelBuilder.Entity("Entities.Concrete.Page", b =>
                {
                    b.Navigation("PageLanguages");

                    b.Navigation("PagePermissons");
                });

            modelBuilder.Entity("Entities.Concrete.PageType", b =>
                {
                    b.Navigation("Pages");
                });
#pragma warning restore 612, 618
        }
    }
}
