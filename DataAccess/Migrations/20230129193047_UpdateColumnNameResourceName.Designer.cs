// <auto-generated />
using System;
using DataAccess.Concrete.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    [Migration("20230129193047_UpdateColumnNameResourceName")]
    partial class UpdateColumnNameResourceName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Concrete.AppOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("AppOperationClaims", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "AppUser"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "AppUserType"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Page"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "PageType"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Product"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "ProductType"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Contact"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("GsmNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("GsmNumber");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastName");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordSalt");

                    b.Property<string>("ProfileImageUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ProfileImageUrl");

                    b.Property<Guid>("RefreshToken")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserName");

                    b.Property<int>("UserTypeID")
                        .HasColumnType("int")
                        .HasColumnName("UserTypeID");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeID");

                    b.ToTable("AppUsers", "dbo");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedDate = new DateTime(2023, 1, 29, 22, 30, 45, 815, DateTimeKind.Local).AddTicks(1933),
                            CreatedUserId = 1,
                            Email = "sadmin@gmail.com",
                            FirstName = "System",
                            GsmNumber = "",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Admin",
                            PasswordHash = new byte[] { 169, 1, 99, 32, 213, 31, 137, 112, 85, 177, 7, 89, 65, 246, 148, 218, 39, 155, 4, 205, 156, 101, 188, 75, 2, 155, 82, 144, 16, 79, 96, 211, 181, 191, 24, 193, 156, 170, 9, 250, 147, 118, 42, 107, 167, 79, 242, 20, 233, 157, 110, 152, 94, 199, 237, 24, 89, 145, 237, 194, 85, 179, 248, 134 },
                            PasswordSalt = new byte[] { 118, 24, 103, 214, 202, 83, 41, 235, 167, 113, 185, 50, 226, 255, 99, 85, 183, 212, 58, 162, 39, 109, 220, 12, 68, 79, 68, 71, 56, 98, 42, 239, 202, 9, 112, 249, 23, 175, 82, 246, 115, 138, 0, 254, 109, 201, 225, 13, 255, 29, 55, 197, 14, 24, 147, 76, 220, 183, 117, 74, 23, 221, 53, 229, 211, 144, 51, 145, 101, 85, 59, 107, 225, 204, 41, 245, 38, 164, 146, 76, 253, 108, 178, 153, 158, 65, 20, 81, 45, 122, 148, 204, 110, 223, 117, 119, 144, 255, 87, 98, 50, 130, 66, 204, 115, 163, 17, 179, 51, 61, 152, 95, 218, 207, 228, 50, 156, 68, 58, 180, 121, 45, 211, 102, 243, 241, 107, 38 },
                            ProfileImageUrl = "",
                            RefreshToken = new Guid("4ff05c23-a60f-4b66-9795-496db9d8ac71"),
                            UserName = "sadmin",
                            UserTypeID = 1
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ResourceID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResourceID");

                    b.ToTable("AppUserTypes", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 1, 29, 22, 30, 45, 819, DateTimeKind.Local).AddTicks(3906),
                            CreatedUserId = -1,
                            IsActive = true,
                            IsDeleted = false,
                            ResourceID = 1
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUserTypeAppOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppOperationClaimId")
                        .HasColumnType("int");

                    b.Property<int?>("AppUserTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OperationClaimID")
                        .HasColumnType("int")
                        .HasColumnName("OperationClaimId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("char(4)")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserTypeID")
                        .HasColumnType("int")
                        .HasColumnName("UserTypeID");

                    b.HasKey("Id");

                    b.HasIndex("AppOperationClaimId");

                    b.HasIndex("AppUserTypeId");

                    b.ToTable("AppUserTypeAppOperationClaims", "dbo");
                });

            modelBuilder.Entity("Entities.Concrete.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("DisplayOrder");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("LanguageCode");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LanguageName");

                    b.HasKey("Id");

                    b.ToTable("Languages", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            IsActive = true,
                            LanguageCode = "tr-TR",
                            LanguageName = "Türkçe"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            IsActive = true,
                            LanguageCode = "en-EN",
                            LanguageName = "English"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("DisplayOrder");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)")
                        .HasColumnName("MetaDescription");

                    b.Property<string>("MetaKeywords")
                        .HasMaxLength(260)
                        .HasColumnType("nvarchar(260)")
                        .HasColumnName("MetaKeywords");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("MetaTitle");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PageName");

                    b.Property<string>("PageSeoURL")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("PageSeoURL");

                    b.Property<int>("PageTypeID")
                        .HasColumnType("int")
                        .HasColumnName("PageTypeID");

                    b.Property<string>("PageURL")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("PageURL");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    b.HasKey("Id");

                    b.HasIndex("PageTypeID");

                    b.ToTable("Pages", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 3,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Sistem Ayarları",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "#"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcılar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUser/List",
                            ParentID = 1
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcılar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUser/Add",
                            ParentID = 2
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcılar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUser/Update",
                            ParentID = 2
                        },
                        new
                        {
                            Id = 5,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcılar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUser/Delete",
                            ParentID = 2
                        },
                        new
                        {
                            Id = 6,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcılar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUser/Detail",
                            ParentID = 2
                        },
                        new
                        {
                            Id = 7,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcı Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUserType/List",
                            ParentID = 1
                        },
                        new
                        {
                            Id = 8,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcı Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUserType/Add",
                            ParentID = 7
                        },
                        new
                        {
                            Id = 9,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcı Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUserType/Update",
                            ParentID = 7
                        },
                        new
                        {
                            Id = 10,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcı Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUserType/Delete",
                            ParentID = 7
                        },
                        new
                        {
                            Id = 11,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcı Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUserType/Detail",
                            ParentID = 7
                        },
                        new
                        {
                            Id = 12,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Sayfalar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Page/List",
                            ParentID = 1
                        },
                        new
                        {
                            Id = 13,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Sayfalar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Page/Add",
                            ParentID = 12
                        },
                        new
                        {
                            Id = 14,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Sayfalar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Page/Update",
                            ParentID = 12
                        },
                        new
                        {
                            Id = 15,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Sayfalar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Page/Delete",
                            ParentID = 12
                        },
                        new
                        {
                            Id = 16,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Sayfalar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Page/Detail",
                            ParentID = 12
                        },
                        new
                        {
                            Id = 17,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Sayfa Yetkileri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/PagePermisson/List",
                            ParentID = 1
                        },
                        new
                        {
                            Id = 18,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürün",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "#"
                        },
                        new
                        {
                            Id = 19,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürünler",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Product/List",
                            ParentID = 18
                        },
                        new
                        {
                            Id = 20,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürünler",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Product/Add",
                            ParentID = 19
                        },
                        new
                        {
                            Id = 21,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürünler",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Product/Update",
                            ParentID = 19
                        },
                        new
                        {
                            Id = 22,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürünler",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Product/Delete",
                            ParentID = 19
                        },
                        new
                        {
                            Id = 23,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürünler",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Product/Detail",
                            ParentID = 19
                        },
                        new
                        {
                            Id = 24,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürün Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/ProductType/List",
                            ParentID = 18
                        },
                        new
                        {
                            Id = 25,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürün Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/ProductType/Add",
                            ParentID = 24
                        },
                        new
                        {
                            Id = 26,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürün Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/ProductType/Update",
                            ParentID = 24
                        },
                        new
                        {
                            Id = 27,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürün Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/ProductType/Delete",
                            ParentID = 24
                        },
                        new
                        {
                            Id = 28,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürün Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/ProductType/Detail",
                            ParentID = 24
                        },
                        new
                        {
                            Id = 29,
                            DisplayOrder = 2,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Genel Sayfalar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "#"
                        },
                        new
                        {
                            Id = 31,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Hakkımızda",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Contact/List",
                            ParentID = 29
                        },
                        new
                        {
                            Id = 32,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Hakkımızda",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Contact/Add",
                            ParentID = 30
                        },
                        new
                        {
                            Id = 33,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Hakkımızda",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Contact/Update",
                            ParentID = 30
                        },
                        new
                        {
                            Id = 34,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Hakkımızda",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Contact/Delete",
                            ParentID = 30
                        },
                        new
                        {
                            Id = 35,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Hakkımızda",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Contact/Detail",
                            ParentID = 30
                        });
                });

            modelBuilder.Entity("Entities.Concrete.PagePermisson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppOperationClaimId")
                        .HasColumnType("int");

                    b.Property<int?>("AppUserTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OperationClaimID")
                        .HasColumnType("int")
                        .HasColumnName("OperationClaimID");

                    b.Property<int>("PageID")
                        .HasColumnType("int")
                        .HasColumnName("PageID");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserTypeID")
                        .HasColumnType("int")
                        .HasColumnName("UserTypeID");

                    b.HasKey("Id");

                    b.HasIndex("AppOperationClaimId");

                    b.HasIndex("AppUserTypeId");

                    b.HasIndex("PageID");

                    b.ToTable("PagePermissons", "dbo");
                });

            modelBuilder.Entity("Entities.Concrete.PageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PageTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PageTypeName");

                    b.HasKey("Id");

                    b.ToTable("PageTypes", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            PageTypeName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            PageTypeName = "Web"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ResourceName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ResourceName");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Resources", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 1, 29, 22, 30, 45, 834, DateTimeKind.Local).AddTicks(395),
                            CreatedUserId = -1,
                            IsActive = true,
                            IsDeleted = false,
                            ResourceName = "AppUserType_SystemAdmin"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.ResourceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageID")
                        .HasColumnType("int")
                        .HasColumnName("LanguageID");

                    b.Property<int>("ResourceID")
                        .HasColumnType("int")
                        .HasColumnName("ResourceID");

                    b.Property<string>("ResourceValue")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ResourceValue");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageID");

                    b.HasIndex("ResourceID");

                    b.ToTable("ResourceDetails", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 1, 29, 22, 30, 45, 836, DateTimeKind.Local).AddTicks(2323),
                            CreatedUserId = -1,
                            IsActive = true,
                            IsDeleted = false,
                            LanguageID = 1,
                            ResourceID = 1,
                            ResourceValue = "System Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 1, 29, 22, 30, 45, 836, DateTimeKind.Local).AddTicks(4767),
                            CreatedUserId = -1,
                            IsActive = true,
                            IsDeleted = false,
                            LanguageID = 2,
                            ResourceID = 1,
                            ResourceValue = "System Admin"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.HasOne("Entities.Concrete.AppUserType", "AppUserType")
                        .WithMany("AppUsers")
                        .HasForeignKey("UserTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUserType");
                });

            modelBuilder.Entity("Entities.Concrete.AppUserType", b =>
                {
                    b.HasOne("Entities.Concrete.Resource", "Resource")
                        .WithMany("AppUserTypes")
                        .HasForeignKey("ResourceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("Entities.Concrete.AppUserTypeAppOperationClaim", b =>
                {
                    b.HasOne("Entities.Concrete.AppOperationClaim", "AppOperationClaim")
                        .WithMany("AppUserTypeAppOperationClaims")
                        .HasForeignKey("AppOperationClaimId");

                    b.HasOne("Entities.Concrete.AppUserType", "AppUserType")
                        .WithMany()
                        .HasForeignKey("AppUserTypeId");

                    b.Navigation("AppOperationClaim");

                    b.Navigation("AppUserType");
                });

            modelBuilder.Entity("Entities.Concrete.Page", b =>
                {
                    b.HasOne("Entities.Concrete.PageType", "PageType")
                        .WithMany("Pages")
                        .HasForeignKey("PageTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PageType");
                });

            modelBuilder.Entity("Entities.Concrete.PagePermisson", b =>
                {
                    b.HasOne("Entities.Concrete.AppOperationClaim", "AppOperationClaim")
                        .WithMany("PagePermissons")
                        .HasForeignKey("AppOperationClaimId");

                    b.HasOne("Entities.Concrete.AppUserType", "AppUserType")
                        .WithMany("PagePermissons")
                        .HasForeignKey("AppUserTypeId");

                    b.HasOne("Entities.Concrete.Page", "Page")
                        .WithMany("PagePermissons")
                        .HasForeignKey("PageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppOperationClaim");

                    b.Navigation("AppUserType");

                    b.Navigation("Page");
                });

            modelBuilder.Entity("Entities.Concrete.ResourceDetail", b =>
                {
                    b.HasOne("Entities.Concrete.Language", "Language")
                        .WithMany("ResourceDetails")
                        .HasForeignKey("LanguageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("Entities.Concrete.AppOperationClaim", b =>
                {
                    b.Navigation("AppUserTypeAppOperationClaims");

                    b.Navigation("PagePermissons");
                });

            modelBuilder.Entity("Entities.Concrete.AppUserType", b =>
                {
                    b.Navigation("AppUsers");

                    b.Navigation("PagePermissons");
                });

            modelBuilder.Entity("Entities.Concrete.Language", b =>
                {
                    b.Navigation("ResourceDetails");
                });

            modelBuilder.Entity("Entities.Concrete.Page", b =>
                {
                    b.Navigation("PagePermissons");
                });

            modelBuilder.Entity("Entities.Concrete.PageType", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("Entities.Concrete.Resource", b =>
                {
                    b.Navigation("AppUserTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
