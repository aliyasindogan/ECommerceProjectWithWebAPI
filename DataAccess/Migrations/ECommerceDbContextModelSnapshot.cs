// <auto-generated />
using System;
using DataAccess.Concrete.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    partial class ECommerceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Concrete.AppOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("AppOperationClaims", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "AppUser"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "AppUserType"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Page"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "PageType"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Product"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "ProductType"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Contact"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppUserTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("GsmNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("GsmNumber");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastName");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordSalt");

                    b.Property<string>("ProfileImageUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ProfileImageUrl");

                    b.Property<Guid>("RefreshToken")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserName");

                    b.Property<int>("UserTypeID")
                        .HasColumnType("int")
                        .HasColumnName("UserTypeID");

                    b.HasKey("Id");

                    b.HasIndex("AppUserTypeId");

                    b.ToTable("AppUsers", "dbo");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedDate = new DateTime(2023, 1, 8, 4, 6, 18, 451, DateTimeKind.Local).AddTicks(6990),
                            CreatedUserId = 1,
                            Email = "sadmin@gmail.com",
                            FirstName = "System",
                            GsmNumber = "",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Admin",
                            PasswordHash = new byte[] { 205, 51, 117, 241, 80, 186, 134, 199, 56, 72, 134, 212, 93, 20, 244, 104, 121, 24, 128, 202, 19, 120, 87, 148, 187, 139, 230, 135, 53, 255, 111, 245, 239, 38, 113, 4, 17, 64, 149, 217, 125, 59, 103, 130, 34, 77, 228, 8, 3, 196, 73, 211, 116, 178, 110, 106, 92, 239, 213, 229, 107, 176, 178, 204 },
                            PasswordSalt = new byte[] { 115, 155, 5, 104, 160, 152, 205, 197, 12, 46, 27, 77, 222, 253, 204, 185, 66, 233, 31, 154, 35, 133, 189, 49, 111, 168, 104, 39, 33, 238, 108, 12, 2, 108, 56, 241, 10, 165, 203, 101, 111, 187, 89, 75, 17, 141, 119, 105, 164, 32, 194, 112, 98, 248, 210, 212, 255, 5, 115, 25, 1, 121, 106, 180, 76, 27, 110, 54, 152, 158, 57, 33, 105, 33, 124, 251, 160, 6, 164, 28, 147, 140, 104, 146, 28, 210, 220, 83, 154, 2, 201, 29, 20, 139, 129, 25, 160, 14, 164, 146, 60, 113, 48, 234, 22, 235, 82, 50, 217, 247, 181, 183, 227, 94, 136, 147, 165, 116, 127, 45, 45, 125, 134, 121, 194, 33, 174, 239 },
                            ProfileImageUrl = "",
                            RefreshToken = new Guid("59f1cb02-a792-4fa7-af08-173b6c039354"),
                            UserName = "sadmin",
                            UserTypeID = -1
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("UserTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UserTypeName");

                    b.HasKey("Id");

                    b.ToTable("AppUserTypes", "dbo");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedUserId = 0,
                            IsActive = true,
                            IsDeleted = false,
                            UserTypeName = "System Admin"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUserTypeAppOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppOperationClaimId")
                        .HasColumnType("int");

                    b.Property<int?>("AppUserTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OperationClaimID")
                        .HasColumnType("int")
                        .HasColumnName("OperationClaimId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("char(4)")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserTypeID")
                        .HasColumnType("int")
                        .HasColumnName("UserTypeID");

                    b.HasKey("Id");

                    b.HasIndex("AppOperationClaimId");

                    b.HasIndex("AppUserTypeId");

                    b.ToTable("AppUserTypeAppOperationClaims", "dbo");
                });

            modelBuilder.Entity("Entities.Concrete.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("DisplayOrder");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)")
                        .HasColumnName("MetaDescription");

                    b.Property<string>("MetaKeywords")
                        .HasMaxLength(260)
                        .HasColumnType("nvarchar(260)")
                        .HasColumnName("MetaKeywords");

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("MetaTitle");

                    b.Property<string>("PageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PageName");

                    b.Property<string>("PageSeoURL")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("PageSeoURL");

                    b.Property<int>("PageTypeID")
                        .HasColumnType("int")
                        .HasColumnName("PageTypeID");

                    b.Property<string>("PageURL")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("PageURL");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    b.HasKey("Id");

                    b.HasIndex("PageTypeID");

                    b.ToTable("Pages", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Sistem Ayarları",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "#"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcılar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUsers/List",
                            ParentID = 1
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcılar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUsers/Add",
                            ParentID = 2
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcılar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUsers/Update",
                            ParentID = 2
                        },
                        new
                        {
                            Id = 5,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcılar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUsers/Delete",
                            ParentID = 2
                        },
                        new
                        {
                            Id = 6,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcılar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUsers/Detail",
                            ParentID = 2
                        },
                        new
                        {
                            Id = 7,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcı Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUserTypes/List",
                            ParentID = 1
                        },
                        new
                        {
                            Id = 8,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcı Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUserTypes/Add",
                            ParentID = 7
                        },
                        new
                        {
                            Id = 9,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcı Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUserTypes/Update",
                            ParentID = 7
                        },
                        new
                        {
                            Id = 10,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcı Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUserTypes/Delete",
                            ParentID = 7
                        },
                        new
                        {
                            Id = 11,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Kullanıcı Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/AppUserTypes/Detail",
                            ParentID = 7
                        },
                        new
                        {
                            Id = 12,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Sayfalar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Pages/List",
                            ParentID = 1
                        },
                        new
                        {
                            Id = 13,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Sayfalar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Pages/Add",
                            ParentID = 12
                        },
                        new
                        {
                            Id = 14,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Sayfalar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Pages/Update",
                            ParentID = 12
                        },
                        new
                        {
                            Id = 15,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Sayfalar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Pages/Delete",
                            ParentID = 12
                        },
                        new
                        {
                            Id = 16,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Sayfalar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Pages/Detail",
                            ParentID = 12
                        },
                        new
                        {
                            Id = 17,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Sayfa Yetkileri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/PagePermissons/List",
                            ParentID = 1
                        },
                        new
                        {
                            Id = 18,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürün",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "#"
                        },
                        new
                        {
                            Id = 19,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürünler",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Products/List",
                            ParentID = 18
                        },
                        new
                        {
                            Id = 20,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürünler",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Products/Add",
                            ParentID = 19
                        },
                        new
                        {
                            Id = 21,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürünler",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Products/Update",
                            ParentID = 19
                        },
                        new
                        {
                            Id = 22,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürünler",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Products/Delete",
                            ParentID = 19
                        },
                        new
                        {
                            Id = 23,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürünler",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Products/Detail",
                            ParentID = 19
                        },
                        new
                        {
                            Id = 24,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürün Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/ProductTypes/List",
                            ParentID = 18
                        },
                        new
                        {
                            Id = 25,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürün Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/ProductTypes/Add",
                            ParentID = 24
                        },
                        new
                        {
                            Id = 26,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürün Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/ProductTypes/Update",
                            ParentID = 24
                        },
                        new
                        {
                            Id = 27,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürün Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/ProductTypes/Delete",
                            ParentID = 24
                        },
                        new
                        {
                            Id = 28,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Ürün Tipleri",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/ProductTypes/Detail",
                            ParentID = 24
                        },
                        new
                        {
                            Id = 29,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Genel Sayfalar",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "#"
                        },
                        new
                        {
                            Id = 31,
                            DisplayOrder = 1,
                            IsActive = true,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Hakkımızda",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Contacts/List",
                            ParentID = 29
                        },
                        new
                        {
                            Id = 32,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Hakkımızda",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Contacts/Add",
                            ParentID = 30
                        },
                        new
                        {
                            Id = 33,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Hakkımızda",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Contacts/Update",
                            ParentID = 30
                        },
                        new
                        {
                            Id = 34,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Hakkımızda",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Contacts/Delete",
                            ParentID = 30
                        },
                        new
                        {
                            Id = 35,
                            DisplayOrder = 1,
                            IsActive = false,
                            MetaDescription = "",
                            MetaKeywords = "",
                            MetaTitle = "",
                            PageName = "Hakkımızda",
                            PageSeoURL = "",
                            PageTypeID = 1,
                            PageURL = "/Admin/Contacts/Detail",
                            ParentID = 30
                        });
                });

            modelBuilder.Entity("Entities.Concrete.PagePermisson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppOperationClaimId")
                        .HasColumnType("int");

                    b.Property<int?>("AppUserTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OperationClaimID")
                        .HasColumnType("int")
                        .HasColumnName("OperationClaimID");

                    b.Property<int>("PageID")
                        .HasColumnType("int")
                        .HasColumnName("PageID");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserTypeID")
                        .HasColumnType("int")
                        .HasColumnName("UserTypeID");

                    b.HasKey("Id");

                    b.HasIndex("AppOperationClaimId");

                    b.HasIndex("AppUserTypeId");

                    b.HasIndex("PageID");

                    b.ToTable("PagePermissons", "dbo");
                });

            modelBuilder.Entity("Entities.Concrete.PageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PageTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PageTypeName");

                    b.HasKey("Id");

                    b.ToTable("PageTypes", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            PageTypeName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            PageTypeName = "Web"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.AppUser", b =>
                {
                    b.HasOne("Entities.Concrete.AppUserType", "AppUserType")
                        .WithMany("AppUsers")
                        .HasForeignKey("AppUserTypeId");

                    b.Navigation("AppUserType");
                });

            modelBuilder.Entity("Entities.Concrete.AppUserTypeAppOperationClaim", b =>
                {
                    b.HasOne("Entities.Concrete.AppOperationClaim", "AppOperationClaim")
                        .WithMany("AppUserTypeAppOperationClaims")
                        .HasForeignKey("AppOperationClaimId");

                    b.HasOne("Entities.Concrete.AppUserType", "AppUserType")
                        .WithMany()
                        .HasForeignKey("AppUserTypeId");

                    b.Navigation("AppOperationClaim");

                    b.Navigation("AppUserType");
                });

            modelBuilder.Entity("Entities.Concrete.Page", b =>
                {
                    b.HasOne("Entities.Concrete.PageType", "PageType")
                        .WithMany("Pages")
                        .HasForeignKey("PageTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PageType");
                });

            modelBuilder.Entity("Entities.Concrete.PagePermisson", b =>
                {
                    b.HasOne("Entities.Concrete.AppOperationClaim", "AppOperationClaim")
                        .WithMany("PagePermissons")
                        .HasForeignKey("AppOperationClaimId");

                    b.HasOne("Entities.Concrete.AppUserType", "AppUserType")
                        .WithMany("PagePermissons")
                        .HasForeignKey("AppUserTypeId");

                    b.HasOne("Entities.Concrete.Page", "Page")
                        .WithMany("PagePermissons")
                        .HasForeignKey("PageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppOperationClaim");

                    b.Navigation("AppUserType");

                    b.Navigation("Page");
                });

            modelBuilder.Entity("Entities.Concrete.AppOperationClaim", b =>
                {
                    b.Navigation("AppUserTypeAppOperationClaims");

                    b.Navigation("PagePermissons");
                });

            modelBuilder.Entity("Entities.Concrete.AppUserType", b =>
                {
                    b.Navigation("AppUsers");

                    b.Navigation("PagePermissons");
                });

            modelBuilder.Entity("Entities.Concrete.Page", b =>
                {
                    b.Navigation("PagePermissons");
                });

            modelBuilder.Entity("Entities.Concrete.PageType", b =>
                {
                    b.Navigation("Pages");
                });
#pragma warning restore 612, 618
        }
    }
}
